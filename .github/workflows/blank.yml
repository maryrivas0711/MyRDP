name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-10
    timeout-minutes: 3600

    steps:
      - name: Disable Password Complexity Policy (Temporarily)
        run: |
          # Export current security policy
          secedit /export /cfg C:\security.cfg /quiet
          # Disable password complexity
          (Get-Content C:\security.cfg) -replace 'PasswordComplexity = 1', 'PasswordComplexity = 0' | Set-Content C:\security.cfg
          # Apply new policy
          secedit /configure /db secedit.sdb /cfg C:\security.cfg /areas SECURITYPOLICY /quiet
          Remove-Item C:\security.cfg
        shell: powershell

      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale" 2>$null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force
        shell: powershell

      - name: Create RDP User with Fixed Credentials
        run: |
          $username = "RDPCDRF"
          $password = "26733481**"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          try {
              New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -ErrorAction Stop
              Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction Stop
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction Stop
          }
          catch {
              Write-Error "Failed to create user '$username': $_"
              exit 1
          }

          if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
              Write-Error "User '$username' was not created."
              exit 1
          }

          Write-Host "::add-mask::$password"
          if ($env:GITHUB_ENV) {
              "RDP_CREDS=User: $username | Password: $password" | Add-Content -Path $env:GITHUB_ENV
          }
        shell: pwsh

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
        shell: powershell

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID

          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned."
              exit 1
          }
          "TAILSCALE_IP=$tsIP" | Add-Content -Path $env:GITHUB_ENV
        shell: pwsh

      - name: Verify RDP Accessibility
        run: |
          Write-Host "Testing RDP connectivity to: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "RDP port 3389 not reachable."
              exit 1
          }
          Write-Host "âœ… RDP port is open!"
        shell: pwsh

      - name: Maintain Connection
        run: |
          Write-Host "`n=== ðŸ”‘ RDP ACCESS DETAILS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: RDPCDRF"
          Write-Host "Password: [masked in logs]"
          Write-Host "==============================`n"

          while ($true) {
              Write-Host "[$(Get-Date)] âœ… RDP session active. Workflow will keep running..."
              Start-Sleep -Seconds 300
          }
        shell: pwsh
